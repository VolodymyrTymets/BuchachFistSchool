@model BushachFirstSchool.Models.Test.TestPastViewModel

@{
    ViewBag.Title = "Past";
    Layout = "~/Views/Shared/_Admin.cshtml";
    var testAArr = Model.TestCollection.TeststACol.ToArray();
    var testBArr = Model.TestCollection.TeststBCol.ToArray();
    var testCArr = Model.TestCollection.TeststCCol.ToArray(); 
    var testDArr = Model.TestCollection.TeststDCol.ToArray();
    
    var resultBArr =
                    (from i in Model.TestCollection.TeststBCol
                     join o in Model.TestResult.testBColl
                     on i.concept.ConceptId equals o.conceptId
                     select o).ToArray();
    var resultCArr =
                     (from i in Model.TestCollection.TeststCCol
                      join o in Model.TestResult.testCColl
                      on i.thesis.ThesisId equals o.conceptId
                      select o).ToArray();

}
@{
    int iterator = 1;
    int countOfTest = @Model.TestCollection.TeststACol.Count() + @Model.TestCollection.TeststBCol.Count() + @Model.TestCollection.TeststCCol.Count() + @Model.TestCollection.TeststDCol.Count();
}
<div class="col-md-12 shadow-z-2" style="background-color: white; " id="testDiv" >
    <div class="row">
        <div class="col-lg-10 col-lg-offset-2">
            <div class="col-lg-4">
             
                <div id="loading" style="display:none" class="pull-right">
                    Ваші дані зберігаються...
                    <div id="followingBallsG">
                        <div id="followingBallsG_1" class="followingBallsG">
                        </div>
                        <div id="followingBallsG_2" class="followingBallsG">
                        </div>
                        <div id="followingBallsG_3" class="followingBallsG">
                        </div>
                        <div id="followingBallsG_4" class="followingBallsG">
                        </div>
                    </div>
                </div>

            </div>
            <div class="col-lg-4">
                Час до завершення тесту
            </div>
                <div class="col-lg-2">
                    <svg width="50" height="50" viewbox="0 0 250 250">
                        <path id="border" transform="translate(125, 125)" />
                        <path id="loader" transform="translate(125, 125) scale(.84)" />
                    </svg>
                </div>
                <div class="col-lg-1">
                    <span id="minutcontainer">1</span>
                </div>
                <div class="col-lg-1">
                    <span id="secondcontainer">2</span>
                </div>

            </div>
    </div>
    @if (Model.TestResult == null)
    {
        <span id="timerValue" style="display:none">@Model.TestCollection.Duration</span>
    }
    else
    {
          <span  style="display:none" id="timerValue">@(Model.TestResult.RemainderTime.Minute + 1)</span>
    }

    <!-- Indicators -->
    <div class="row">
        <div class="col-lg-10 col-lg-offset-1">
            <ul class="pagination center-block">
                @for (int i = 0; i < countOfTest; i++)
                {
                    <li>  <a class="btn btn-default" data-slide-to="@i" data-target="#testCarousel">@(i + 1)</a></li>
                }
            </ul>
        </div>
    </div>

    <div id="testCarousel" class="carousel slide" data-ride="carousel" >     
       

        <!-- Wrapper for slides -->
        <div class="col-lg-10 col-lg-offset-1">
            <div class="carousel-inner" role="listbox">

                @for (int i = 0; i < testAArr.Length; i++)
                {
                    <div class="item carusel-test-item">
                        <div class="">
                            <span class="label label-info">@iterator тест із @countOfTest</span>
                            @if (@Model.TestResult == null) { 
                             Html.RenderPartial("_singleTestA", testAArr[i]);
                            }
                            else{
                                var resultAArr = Model.TestResult.testAColl.ToArray();

                                  Html.RenderPartial("_singleTestAReload", new BushachFirstSchool.Models.Test.SingleTestAReloadviewModel
                                        {
                                            AnswerA = resultAArr[i],
                                            TestA = testAArr[i]
                                        });
                                  
                            }
                        </div>
                    </div>
                              iterator++;
                }

                @for (int i = 0; i < testBArr.Length; i++)
                {
                    <div class="item carusel-test-item">
                        <div class="">
                            <span class="label label-info">@iterator тест із @countOfTest</span>
                            @if (@Model.TestResult == null)
                            {
                                Html.RenderPartial("_singleTestB", testBArr[i]);
                            }
                            else
                            {
                               // var resultBArr = Model.TestResult.testBColl.ToArray();

                                Html.RenderPartial("_singleTestBReload", new BushachFirstSchool.Models.Test.SingleTestBReloadviewModel
                                      {
                                          AnswerB = resultBArr[i],
                                          TestB = testBArr[i]
                                      });

                            }
                        </div>
                    </div>
                            iterator++;
                }
                @for (int i = 0; i < testCArr.Length; i++)
                {
                    <div class="item carusel-test-item">
                        <div class="">
                            <span class="label label-info">@iterator тест із @countOfTest</span>
                            @if (@Model.TestResult == null)
                            {
                                Html.RenderPartial("_singleTestC", testCArr[i]);
                            }
                            else
                            {
                              //  var resultCArr = Model.TestResult.testCColl.ToArray();

                                Html.RenderPartial("_singleTestCReload", new BushachFirstSchool.Models.Test.SingleTestCReloadviewModel
                                      {
                                          AnswerC = resultCArr[i],
                                          TestC = testCArr[i]
                                      });

                            }
                        </div>
                    </div>
                            iterator++;
                }
                @for (int i = 0; i < testDArr.Length; i++)
                {
                    <div class="item carusel-test-item">
                        <div class="">
                            <span class="label label-info">@iterator тест із @countOfTest</span>
                            @if (@Model.TestResult == null)
                            {
                                Html.RenderPartial("_singleTestD", testDArr[i]);
                            }
                            else
                            {
                                var resultDArr = Model.TestResult.testDColl.ToArray();

                                Html.RenderPartial("_singleTestDReload", new BushachFirstSchool.Models.Test.SingleTestDReloadviewModel
                                      {
                                          AnswerD = resultDArr[i],
                                          TestD = testDArr[i]
                                      });

                            }
                        </div>
                    </div>
                            iterator++;
                }
            </div>
        </div>

        <!-- Controls -->
        
            <div class="col-lg-6 col-lg-offset-4">
                <a class="btn btn-fab btn-raised btn-material-black" href="#testCarousel" role="button" data-slide="prev">
                    <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="btn btn-black" id="doneTestButton">Закінчити тест</a>
                <a class="btn btn-fab btn-raised btn-material-black" href="#testCarousel" role="button" data-slide="next">
                    <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        </div>
</div>
<div id="testresultdiv">

</div>
@Scripts.Render("~/bundles/testResult")